// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "Message.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MessageRoot

@implementation MessageRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - MessageRoot_FileDescriptor

static GPBFileDescriptor *MessageRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Message

@implementation Message

@dynamic msgId;
@dynamic msgSn;
@dynamic sercte;
@dynamic sendId;
@dynamic reciveId;
@dynamic terminalType;
@dynamic msgType;
@dynamic groupMessage;
@dynamic groupId;
@dynamic replyMsg;
@dynamic token;
@dynamic timeStamp;
@dynamic msgContent;

typedef struct Message__storage_ {
  uint32_t _has_storage_[1];
  int32_t msgId;
  uint32_t sendId;
  uint32_t reciveId;
  uint32_t terminalType;
  int32_t replyMsg;
  uint32_t groupId;
  NSString *msgType;
  NSString *token;
  NSData *msgContent;
  uint64_t msgSn;
  uint64_t timeStamp;
} Message__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "msgId",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_MsgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(Message__storage_, msgId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "msgSn",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_MsgSn,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(Message__storage_, msgSn),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "sercte",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_Sercte,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "sendId",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_SendId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(Message__storage_, sendId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "reciveId",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_ReciveId,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(Message__storage_, reciveId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "terminalType",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_TerminalType,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(Message__storage_, terminalType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "msgType",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_MsgType,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(Message__storage_, msgType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "token",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_Token,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(Message__storage_, token),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "timeStamp",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_TimeStamp,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(Message__storage_, timeStamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "msgContent",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_MsgContent,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(Message__storage_, msgContent),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "replyMsg",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_ReplyMsg,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(Message__storage_, replyMsg),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeInt32,
      },
      {
        .name = "groupMessage",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_GroupMessage,
        .hasIndex = 8,
        .offset = 9,  // Stored in _has_storage_ to save space.
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "groupId",
        .dataTypeSpecific.className = NULL,
        .number = Message_FieldNumber_GroupId,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(Message__storage_, groupId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[Message class]
                                     rootClass:[MessageRoot class]
                                          file:MessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(Message__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\r\001c\342\000\002c\342\000\003f\000\004d\342\000\005f\342\000\006h\344\000\007c\344\000\010e\000\td\345\000\nc\347\000\013"
        "e\343\000\014e\347\000\re\342\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
